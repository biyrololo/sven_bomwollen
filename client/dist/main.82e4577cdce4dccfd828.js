var t={d:(i,e)=>{for(var s in e)t.o(e,s)&&!t.o(i,s)&&Object.defineProperty(i,s,{enumerable:!0,get:e[s]})},o:(t,i)=>Object.prototype.hasOwnProperty.call(t,i),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},i={};t.r(i),t.d(i,{idleAnimation:()=>L,walkAnimation:()=>$,walkBackAnimation:()=>M});var e={};t.r(e),t.d(e,{idleAnimation:()=>I,walkAnimation:()=>N,walkBackAnimation:()=>S});var s={};t.r(s),t.d(s,{idleAnimation:()=>P,walkAnimation:()=>W,walkBackAnimation:()=>j});var n={};t.r(n),t.d(n,{idleAnimation:()=>q,satisfyAnimation:()=>J,satisfyBackAnimation:()=>H});const o=class{name;image_right=null;image_left=null;frames_count=0;constructor(t){let{name:i,image_right:e,image_left:s}=t;this.name=i,this.frames_count=0,this.size=0,this.image_right_src=e,this.image_right=new Image,this.image_right.onload=()=>{this.frames_count=Math.floor(this.image_right.width/this.image_right.height),this.size=this.image_right.height},this.image_right.src=e,this.image_left_src=s,this.image_left=new Image,this.image_left.src=s}onEachFrame(t,i){}onRender(t,i){}onEnd(t){}},a=class{constructor(t){let{entity:i,frequency:e}=t;this.entity=i||null,this.frequency=e,this.current_animation=null,this.max_frame=0,this.current_frame=0,this.animations=[],this._timer={value:0,max:e}}setEntity(t){this.entity=t}addAnimation(t){this.animations.push(t),null==this.current_animation&&this.setAnimation(t)}setAnimation(t){this.current_animation!=t&&(this.current_animation=t,this.max_frame=t.frames_count,this.current_frame=0)}setAnimationByName(t){let i=this.animations.find((i=>i.name==t));i?this.setAnimation(i):console.error(`Animation ${t} not found`)}getCurrentAnimation(){return this.current_animation.name}getCurrentFrame(){return this.entity?.direction===g.left?this.max_frame-this.current_frame-1:this.current_frame}hasAnimation(t){return this.animations.some((i=>i.name==t))}currentAnimationIn(t){return t.includes(this.getCurrentAnimation())}update(t){this._timer.value+=t,this._timer.value>=this._timer.max&&(this._timer.value=0,this.current_frame++,this.current_frame>=this.max_frame&&(this.current_animation.onEnd(this.entity),this.current_frame=0),this.entity&&this.current_animation.onEachFrame(this.entity,this.current_frame)),this.entity&&this.current_animation.onRender(this.entity,t)}};let r=0;const h=class{constructor(t){let{position:i,sizes:e}=t;this._position=i,this.sizes=e,this._id=++r,this.event_listeners={move:[]}}get position(){return this._position}set position(t){this._position=t;for(const t of this.event_listeners.move)t(this)}get position_x(){return this._position.x}set position_x(t){this._position.x=t;for(const t of this.event_listeners.move)t(this)}get position_y(){return this._position.y}set position_y(t){this._position.y=t;for(const t of this.event_listeners.move)t(this)}addEventListener(t,i){return void 0===this.event_listeners[t]&&(this.event_listeners[t]=[]),this.event_listeners[t].push(i),this.event_listeners[t].length-1}removeEventListener(t,i){void 0!==this.event_listeners[t]&&this.event_listeners[t].splice(i,1)}get box(){return{x:this.position.x,y:this.position.y,x2:this.position.x+this.sizes.width,y2:this.position.y+this.sizes.height,width:this.sizes.width,height:this.sizes.height,center_x:this.position.x+this.sizes.width/2,center_y:this.position.y+this.sizes.height/2}}distance_to(t){let i=this.box,e=t.box,s=i.center_x-e.center_x,n=i.center_y-e.center_y;return Math.sqrt(s*s+n*n)}draw(){throw new Error("Not implemented")}};class l{constructor(){this.type=null,this.points=[]}setCollisionPoints(t){this.points=t}}class c extends l{constructor(t){let{x1:i,y1:e,x2:s,y2:n}=t;super(),this.type="box",this.setCollisionPoints([{x:i,y:e},{x:s,y:e},{x:s,y:n},{x:i,y:n}])}getBox(){if(this.points.length<4)throw new Error("Empty collision points");return{x1:this.points[0].x,y1:this.points[0].y,x2:this.points[2].x,y2:this.points[2].y}}static box_interact(t,i){for(let e of["x1","x2","y1","y2"])t[e]=Math.round(100*t[e])/100,i[e]=Math.round(100*i[e])/100;return!(t.x2<i.x1||t.x1>i.x2||t.y2<i.y1||t.y1>i.y2)}}var p=0;const _=class{constructor(){this.chunks={},this._listeners={},this.chunk_size=null}add(t){if(null===this.chunk_size)return void console.error("Chunk size is not set");let i=Math.floor(t.position_x/this.chunk_size);void 0===this.chunks[i]&&(this.chunks[i]=[]),this.chunks[i].push(t),t.__chunk=i,this._listeners[t._id]=t.addEventListener("move",(t=>{this.chunks[t.__chunk].splice(this.chunks[t.__chunk].indexOf(t),1);let i=Math.floor(t.position_x/this.chunk_size);void 0===this.chunks[i]&&(this.chunks[i]=[]),this.chunks[i].push(t),t.__chunk=i}))}remove(t){let i=this.getByObject(t),e=i.indexOf(t);-1!==e&&i.splice(e,1)}clear(){}getChunk(t){return this.chunks[t]||[]}getByObject(t){let i=Math.floor(t.position_x/this.chunk_size);return this.getChunk(i)}getChunkNumberByObject(t){return void 0!==t.__chunk?t.__chunk:Math.floor(t.position_x/this.chunk_size)}},m=class{constructor(t){let{context:i,canvas:e,global_scale:s}=t;this.levels=[],this.current_level=null,this.player=null,this.camera=null,this.context=i,this.canvas=e,this.closest_entities_distance=100,this.global_scale=s||1,this.performance=performance.now(),this.chunks_manager=new _}addLevel(t){this.levels.push(t);for(let i of t.entities)i._map=this,i.context=this.context;this.current_level||(this.current_level=t)}setCurrentLevel(t){this.current_level=this.levels.find((i=>i.name===t))||null}get_closest_entities(t){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.closest_entities_distance;if(!t)throw new Error("Target cannot be empty");if(!this.current_level)throw new Error("Current level is empty");return this.current_level.entities.filter((e=>e._id!==t._id&&t.distance_to(e)<=i))}check_collision(t){let i,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.closest_entities_distance;if(!t.collision)return!1;if("box"!==t.collision.type)return!1;if(null===this.chunks_manager.chunk_size)i=this.get_closest_entities(t,e);else{let e=this.chunks_manager.getChunkNumberByObject(t);i=[...this.chunks_manager.getChunk(e),...this.chunks_manager.getChunk(e+1),...this.chunks_manager.getChunk(e-1)],i=i.filter((i=>i._id!==t._id))}for(let e=0;e<i.length;e++){let s=i[e];if(s.collision&&"box"===s.collision.type&&t.interact(s))return s}return!1}addCamera(t){this.camera=t,this.camera._map=this,this.camera.context=this.context}update(t){if(null===this.chunks_manager.chunk_size)this.camera.update(this.current_level?.entities||[],t);else{let i=this.chunks_manager.getChunkNumberByObject(this.camera.target),e=[...this.chunks_manager.getChunk(i),...this.chunks_manager.getChunk(i+1),...this.chunks_manager.getChunk(i-1)];this.camera.update(e,t)}}draw(){if(this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.current_level?.draw_background(this.context,this.global_scale,this.camera),null===this.chunks_manager.chunk_size)this.camera.draw(this.current_level?.entities||[],this.global_scale);else{let t=this.chunks_manager.getChunkNumberByObject(this.camera.target),i=[...this.chunks_manager.getChunk(t),...this.chunks_manager.getChunk(t+1),...this.chunks_manager.getChunk(t-1)];this.camera.draw(i,this.global_scale)}this.current_level?.draw_foreground(this.context,this.global_scale,this.camera)}loop(){const t=performance.now(),i=(t-this.performance)/1e3;this.performance=t,this.controls&&this.controls.update(),this.update(i),this.draw(),setTimeout(this.loop.bind(this))}start_loop(t){t?.controls&&(this.controls=t.controls),this.start_current_level(),this.loop()}render_before_update(){}render_before_draw(){}render_afrer_draw(){}start_current_level(){if(!this.current_level)throw new Error("Current level is empty");this.chunks_manager.clear();for(let t of this.current_level.entities)this.chunks_manager.add(t);this.camera.target.position=this.current_level.start_position}},d=class extends h{constructor(t){let{position:i,sizes:e}=t;super({position:i,sizes:e}),this.collision=null,this._map=null}set position(t){let i={...this._position};if(this._map&&(this._position={...t},this._map.check_collision(this,this.sizes.width+this.sizes.height)))this._position={...i};else{this._position=t;for(const t of this.event_listeners.move)t(this)}}get position(){return this._position}set position_x(t){let i={...this._position};if(this._map&&(this._position={x:t,y:this._position.y},this._map.check_collision(this,this.sizes.width+this.sizes.height)))this._position={...i};else{this._position.x=t;for(const t of this.event_listeners.move)t(this)}}get position_x(){return this._position.x}set position_y(t){let i={...this._position};if(this._map&&(this._position={x:this._position.x,y:t},this._map.check_collision(this,this.sizes.width+this.sizes.height)))this._position={...i};else{this._position.y=t;for(const t of this.event_listeners.move)t(this)}}get position_y(){return this._position.y}addCollision(t){this.collision=void 0!==t?t:new c({x1:this.position.x,y1:this.position.y,x2:this.position.x+this.sizes.width,y2:this.position.y+this.sizes.height})}},g={left:-1,right:1,up:-2,down:2,none:0},y=class extends d{z_index=0;scale=1;constructor(t){let{position:i,sizes:e,context:s,max_health:n,speed:o}=t;super({position:i,sizes:e}),this.animation_controller=null,this.direction=g.right,this.mh_direction=g.none,this.mv_direction=g.none,this.context=s||null,this._health=n||100,this.event_listeners={...this.event_listeners,damage:[],heal:[]},this._speed=o||1,this.show_sizes=!1,this.show_collision=!1}setContext(t){this.context=t}set speed(t){if(this._speed=t,this.event_listeners.speed_change)for(const t of this.event_listeners.speed_change)t(this)}get speed(){return this._speed}get type(){return this.$type}set type(t){this.$type=t}applyHeal(t){this.health+=t;for(const t of this.event_listeners.heal)t(this)}applyDamage(t){this.health-=t;for(const t of this.event_listeners.damage)t(this)}set health(t){if(t>this._health)for(const t of this.event_listeners.heal)t(this);if(t<this._health)for(const t of this.event_listeners.damage)t(this);this._health=t}get health(){return this._health}addAnimationController(t){this.animation_controller=t,this.animation_controller.setEntity(this)}update(t){this.animation_controller.update(t)}draw(t,i){if(!this.animation_controller)return;let e={x:this.position.x-t.position.x,y:this.position.y-t.position.y},s=this.animation_controller.getCurrentFrame(),n=this.animation_controller.current_animation.image_left;this.direction==g.right&&(n=this.animation_controller.current_animation.image_right),this.customDraw(n,s,t,i,e)}customDraw(t,i,e,s,n){let o=this.scale,a=this.getOffset();if(this.context.drawImage(t,i*this.animation_controller.current_animation.size,0,this.animation_controller.current_animation.size,this.animation_controller.current_animation.size,(n.x+a.x)*s,(n.y+a.y)*s,this.sizes.width*s*o,this.sizes.height*s*o),this.show_sizes&&(this.context.fillStyle="rgba(0, 255, 0, 0.2)",this.context.fillRect(n.x*s,n.y*s,this.sizes.width*s*o,this.sizes.height*s*o)),this.show_collision&&"box"===this.collision?.type){let t=this.collision.getBox();this.context.fillStyle="rgba(0, 0, 255, 0.5)",this.context.fillRect((n.x+t.x1)*s,(n.y+t.y1)*s,(t.x2-t.x1)*s,(t.y2-t.y1)*s)}}getOffset(){return{x:0,y:0}}interact(t){if(!this.collision)return;if("box"===!t.collision.type)return;let i=this.collision.getBox(),e=t.collision.getBox();return i.x1+=this._position.x,i.y1+=this._position.y,i.x2+=this._position.x,i.y2+=this._position.y,e.x1+=t._position.x,e.y1+=t._position.y,e.x2+=t._position.x,e.y2+=t._position.y,c.box_interact(i,e)}},u=class{constructor(){this.keys={},this.pressed_keys=new Set,document.addEventListener("keydown",(t=>{this.keys[t.code]&&(this.pressed_keys.has(t.code)||(this.pressed_keys.add(t.code),this.keys[t.code].down&&this.keys[t.code].rule()&&this.keys[t.code].down()))})),document.addEventListener("keyup",(t=>{this.keys[t.code]&&(this.pressed_keys.delete(t.code),this.keys[t.code].up&&this.keys[t.code].rule()&&this.keys[t.code].up())}))}update(){for(let t in this.keys)if(this.pressed_keys.has(t)){if(void 0===this.keys[t].pressed)continue;this.keys[t].rule()&&this.keys[t].pressed()}}addKey(t,i){this.keys[t]=i,i.rule||(this.keys[t].rule=()=>!0)}removeKey(t){delete this.keys[t]}},x=new class{constructor(t){this._id=++p,this.entities=t.entities||[],this.background_image_src=t.background_image_src||null,this.background_image=new Image,this.background_image_src&&(this.background_image.src=this.background_image_src),this.start_position=t.start_position||{x:0,y:0},this.name=t.name||null,this.static_background=t.static_background||!1,this.sizes=t.sizes||{width:100,height:100}}addEntity(t){this.entities.push(t)}removeEntity(t){this.entities=this.entities.filter((i=>i._id!==t._id))}addEntites(t){this.entities=this.entities.concat(t)}loadBackgroundImage(t){this.background_image_src=t,this.background_image.src=this.background_image_src}set_spawn_position(t){this.start_position=t}draw_background(t,i,e){if(this.static_background)t.drawImage(this.background_image,0,0,e.sizes.width,e.sizes.height);else{let s=e.sizes.height*this.background_image.width/this.background_image.height;for(let n=Math.floor(e.position.x/s);n*s<e.position.x+2*e.sizes.width;n+=1){let o=Math.floor(n*s*100)/100;t.drawImage(this.background_image,0,0,this.background_image.width,this.background_image.height,(o-e.position.x)*i,-e.position.y*i,s*i+1,e.sizes.height*i)}}}draw_foreground(t,i,e){}}({entities:[],background_image_src:"src/images/fon1_winter.png",start_position:{x:500,y:200},name:"test_level",sizes:{width:2800,height:1400}}),f=new class{constructor(t){let{position:i,sizes:e,innerBox:s}=t;this.position={x:0,y:0},i&&(this.position.x=i.x,this.position.y=i.y),this.target=null,this.sizes=e,this._map=null,this.innerBox=s,this.innerBox.x/=100,this.innerBox.y/=100,this.innerBox.width/=100,this.innerBox.height/=100,this.innerBox.x2=this.innerBox.x+this.innerBox.width,this.innerBox.y2=this.innerBox.y+this.innerBox.height,this.move_listener_index=-1,this.context=null}move_listener(t){const i=t.box;i.x2>this.position.x+this.innerBox.x2*this.sizes.width&&(this.position.x=i.x2-this.innerBox.x2*this.sizes.width,this._map.current_level.sizes&&(this.position.x=Math.min(this.position.x,this._map.current_level.sizes.width-this.sizes.width))),i.y2>this.position.y+this.innerBox.y2*this.sizes.height&&(this.position.y=i.y2-this.innerBox.height*this.sizes.height),i.x<this.position.x+this.innerBox.x*this.sizes.width&&(this.position.x=i.x-this.innerBox.x*this.sizes.width,this._map.current_level.sizes&&(this.position.x=Math.max(this.position.x,0))),i.y<this.position.y-this.innerBox.y*this.sizes.height&&(this.position.y=i.y-this.innerBox.y*this.sizes.height)}setTarget(t){this.target&&this.target.removeEventListener("move",this.move_listener_index),this.target=t,t&&(this.move_listener_index=this.target.addEventListener("move",(t=>this.move_listener(t))))}update(t,i,e){t.forEach((t=>{t.update(i)}))}draw(t,i){t.sort(((t,i)=>t.z_index<i.z_index?-1:t.z_index>i.z_index?1:"box"===t.collision?.type&&"box"===i.collision?.type?t.collision.getBox().y2+t.position.y-(i.collision.getBox().y2+i.position.y):t.position.y+t.sizes.height+t.getOffset().y-(i.position.y+i.sizes.height+i.getOffset().y))).forEach((t=>{const e=t.box;e.x2<this.position.x||e.y2<this.position.y||e.x>this.position.x+this.sizes.width||e.y>this.position.y+this.sizes.height||t.draw(this,i)}))}}({position:{x:0,y:0},sizes:{width:2800,height:1400},innerBox:{x:30,y:0,width:40,height:100}}),w=class{constructor(t){this.$map=new Array(t.height);for(let i=0;i<t.height;i++)this.$map[i]=new Array(t.width).fill(null)}get(t,i){return t<0||i<0||t>=this.$map[0].length||i>=this.$map.length?null:this.$map[i][t]}position_of(t){for(let i=0;i<this.$map.length;i++)for(let e=0;e<this.$map[i].length;e++)if(this.$map[i][e]?._id===t._id)return{x:e,y:i};return null}has(t,i){return!(t<0||i<0||t>=this.$map[0].length||i>=this.$map.length)&&null!==this.$map[i][t]}add(t,i,e){this.$map[i][t]=e}remove(t,i){this.$map[i][t]=null}move(t,i,e,s){const n=this.$map[i][t];this.$map[i]=this.$map[i].map(((e,s)=>s===t?null:this.$map[i][s])),this.$map[s]=this.$map[s].map(((t,i)=>i===e?n:this.$map[s][i]))}},k=class extends m{constructor(t){super(t),this.block_size=200,this.mapMap=new w({width:1,height:1})}setMapMap(t){this.mapMap=new w(t)}addEntityToCurrentLevel(t){t._map=this,t.context=this.context,this.current_level.addEntity(t)}removeEntityFromCurrentLevel(t){this.current_level.removeEntity(t);let i=this.mapMap.position_of(t);i&&this.mapMap.remove(i.x,i.y)}draw(){super.draw()}get_posiiton(t,i){return{x:t*this.block_size+i%2*this.block_size/2,y:i/2*this.block_size}}};class v extends y{constructor(t){super(t),this._map,this.$type=t.type,this.is_sleepeing=!1,this._inited=!1,this.target={pos:{x:0,y:0},active:!1},this.movable=!0,this.is_hidden=!1}setTarget(t){this.target.pos={x:t.x,y:t.y},this.target.active=!0}reachTarget(){this.target.active=!1,this.event_listeners.target_reached?.forEach((t=>t(this)))}update(t){if(super.update(t),this.movable)if(this.target.active){if(this.position.x===this.target.pos.x||this.position.y===this.target.pos.y)return;{const i=(t,i)=>({x:this.target.pos.x-t,y:this.target.pos.y-i});let e=i(this.position.x,this.position.y);this.direction=g.right,this.position.x>this.target.pos.x&&(this.direction=g.left);let s=Math.atan2(this.target.pos.y-this.position.y,this.target.pos.x-this.position.x);this.position_x+=Math.cos(s)*this._speed*t,this.position_y+=Math.sin(s)*this._speed*t;let n=i(this.position.x,this.position.y);(n.x*e.x<=0||n.y*e.y<=0)&&(this.position_x=this.target.pos.x,this.position_y=this.target.pos.y,this.reachTarget())}}else"idle"!==this.animation_controller.current_animation.name&&this.animation_controller.setAnimationByName("idle")}draw(t,i){this.is_hidden||super.draw(t,i)}}function b(t,i,e,s){Object.prototype.compare||(Object.prototype.compare=function(t){return JSON.stringify(this)===JSON.stringify(t)});const n=e.$map.length,o=e.$map[0].length,a=e.get(i.x,i.y);if(t.x<0||t.y<0||t.x>=o||t.y>=n)return[];if(i.x<0||i.y<0||i.x>=o||i.y>=n)return[];const r=new Array(n).fill(null).map((()=>new Array(o).fill({from:null,length:Number.MAX_SAFE_INTEGER-1})));if(t.compare(i))return[];r[t.y][t.x]={from:null,length:0},z(t,i,e,r,null,0,s,a);let h=r[i.y][i.x];if(null===h)return[];const l=[i];for(;null!==h.from;)l.push(h.from),h=r[h.from.y][h.from.x];return l.reverse().slice(1)}function z(t,i,e,s,n,o,a,r){if(!(t.x<0||t.y<0||t.x>=e.$map[0].length||t.y>=e.$map.length||e.has(t.x,t.y)&&e.get(t.x,t.y)!==a&&e.get(t.x,t.y)!==r)){if(s[t.y][t.x].length>o)s[t.y][t.x]={from:n,length:o};else if(e.get(t.x,t.y)!==a||e.get(t.x,t.y)===a&&0!==o)return;if(!t.compare(i))for(const[n,h]of function(t,i){const e=A(0,i).map((e=>{let[s,n]=e;return[t+s,i+n]}));return e}(t.x,t.y))z({x:n,y:h},i,e,s,t,o+1,a,r)}}function A(t,i){return i%2==0?[[0,-1],[-1,-1],[-1,1],[0,1]]:[[1,-1],[0,-1],[0,1],[1,1]]}function B(t,i,e,s){return t<e?i<s?"UP_LEFT":i>s?"DOWN_LEFT":"LEFT":t>e?i<s?"UP_RIGHT":i>s?"DOWN_RIGHT":"RIGHT":"NONE"}const E="src/images/svan/",$=new o({name:"walk",image_right:`${E}Walk.png`,image_left:`${E}Walk_Left.png`}),M=new o({name:"walk_back",image_right:`${E}Walk_Back.png`,image_left:`${E}Walk_Back_Left.png`});M.onEachFrame=(t,i)=>{5===i&&(t.animation_controller.current_frame=0)};const L=new o({name:"idle",image_right:`${E}Idle.png`,image_left:`${E}Idle_Left.png`});function O(t,e){const s=new v({position:{x:0,y:0},sizes:{width:200,height:200},context:null,max_health:100,speed:50,...t});return s.$type="player",s.global_target=null,s.addAnimationController(function(){const t=new a({entity:null,frequency:1/15});for(const[e,s]of Object.entries(i))t.addAnimation(s);return t}()),s.addEventListener("target_reached",(t=>{})),s}const C="src/images/man/",N=new o({name:"walk",image_right:`${C}Walk.png`,image_left:`${C}Walk_Left.png`}),S=new o({name:"walk_back",image_right:`${C}Walk_Back.png`,image_left:`${C}Walk_Back_Left.png`}),I=new o({name:"idle",image_right:`${C}Idle.png`,image_left:`${C}Idle_Left.png`}),T="src/images/dog/",W=new o({name:"walk",image_right:`${T}Walk.png`,image_left:`${T}Walk_Left.png`}),j=new o({name:"walk_back",image_right:`${T}Walk_Back.png`,image_left:`${T}Walk_Back_Left.png`}),P=new o({name:"idle",image_right:`${T}Idle.png`,image_left:`${T}Idle_Left.png`}),F=["src/images/svan/Walk.png","src/images/svan/Walk_Left.png","src/images/svan/Idle.png","src/images/svan/Idle_Left.png","src/images/fon1_winter.png"],R="src/images/sheep/",q=new o({name:"idle",image_right:`${R}Idle.png`,image_left:`${R}Idle_Left.png`}),J=new o({name:"satisfy",image_right:`${R}Satisfy.png`,image_left:`${R}Satisfy_Left.png`}),H=new o({name:"satisfy_back",image_right:`${R}SatisfyBack.png`,image_left:`${R}SatisfyBack_Left.png`});function U(t){const i=new v({position:{x:0,y:0},sizes:{width:150,height:150},context:null,max_health:100,speed:100,...t});return i.getOffset=function(){return{x:20,y:20}},i.type="SHEEP",i.is_satisfying=!1,i.getOffset=function(){return i.animation_controller.currentAnimationIn(["satisfy","satisfy_back"])?(i.scale=1.5,{x:10,y:-50}):(i.scale=1,{x:30,y:10})},i.addAnimationController(function(){const t=new a({entity:null,frequency:1/6});for(const[i,e]of Object.entries(n))t.addAnimation(e);return t}()),i.animation_controller.setAnimationByName("idle"),i.animation_controller.current_frame=Math.floor(Math.random()*i.animation_controller.max_frame),i.movable=!1,i}const D=100,K="src/images/fight/",G=new o({name:"fight",image_right:`${K}fight.png`,image_left:`${K}fight_Left.png`});function Y(t){const i=new v({position:{x:0,y:0},sizes:{width:300,height:300},context:null,max_health:100,speed:50,type:"fight",...t});return i.addAnimationController(function(){const t=new a({entity:null,frequency:.1});return t.addAnimation(G),t}()),i.animation_controller.setAnimationByName("fight"),i.animation_controller.max_frame=7,i.movable=!1,i.z_index=2,i.getOffset=function(){return{x:-50,y:-50}},i}const X=new o({name:"idle",image_right:"src/images/speed.jpg",image_left:"src/images/speed.jpg",frames_count:1});function Q(t){const i=new v({position:{x:0,y:0},sizes:{width:150,height:150},context:null,max_health:100,speed:100,...t});return i.type="speedBonus",i.$type="speedBonus",i.addAnimationController(function(){const t=new a({entity:null,frequency:1/6});return t.addAnimation(X),t}()),i.animation_controller.setAnimationByName("idle"),i}const V=new o({name:"idle",image_right:"src/images/bone.jpeg",image_left:"src/images/bone.jpeg",frames_count:1});function Z(t){const i=new v({position:{x:0,y:0},sizes:{width:150,height:150},context:null,max_health:100,speed:100,...t});return i.type="dogBonus",i.$type="dogBonus",i.addAnimationController(function(){const t=new a({entity:null,frequency:1/6});return t.addAnimation(V),t}()),i.animation_controller.setAnimationByName("idle"),i}const tt=new o({name:"idle",image_right:"src/images/bottle.png",image_left:"src/images/bottle.png",frames_count:1});function it(t){const i=new v({position:{x:0,y:0},sizes:{width:150,height:150},context:null,max_health:100,speed:100,...t});return i.type="oldmanBonus",i.$type="oldmanBonus",i.addAnimationController(function(){const t=new a({entity:null,frequency:1/6});return t.addAnimation(tt),t}()),i.animation_controller.setAnimationByName("idle"),i}const et=class{constructor(t){this.player=t.player,this.player.$origin=!0,this.players=[this.player],this.sheeps=[],this.bonus=null,this.man=t.man,this.dog=t.dog,this.map=t.map,this.fights=[Y({context:this.player.context})]}handle(t){const i=t.payload;switch(t.event){case"connected":this.player._id=i.player_id;break;case"game_config":for(let t of this.sheeps)this.map.removeEntityFromCurrentLevel(t);this.sheeps=[],this.players=[this.player],this.fights=[Y({context:this.player.context})],this.map.setMapMap({width:i.map.width,height:i.map.height});for(let t of i.players){let i=this.map.get_posiiton(t.position.x,t.position.y);if(t.id===this.player._id)this.player.position_x=i.x,this.player.position_y=i.y,this.player._speed=D*t.speed,console.log("calculated move_time: "+100*Math.sqrt(2)/this.player._speed),this.map.mapMap.add(t.position.x,t.position.y,this.player);else{const e=O({context:this.player.context,position:i});e._id=t.id,e.speed=D*t.speed,this.players.push(e),this.map.addEntityToCurrentLevel(e),this.map.mapMap.add(t.position.x,t.position.y,e),this.fights.push(Y({context:this.player.context}))}}for(let t of this.fights)this.map.addEntityToCurrentLevel(t),t.is_hidden=!0;let t=this.map.get_posiiton(i.dog.position.x,i.dog.position.y);this.dog.position.x=t.x,this.dog.position.y=t.y,this.dog.speed=D*i.dog.speed,this.dog._id=i.dog.id,this.map.mapMap.add(i.dog.position.x,i.dog.position.y,this.dog);let e=this.map.get_posiiton(i.oldman.position.x,i.oldman.position.y);this.man._id=i.oldman.id,this.man.position.x=e.x,this.man.position.y=e.y,this.man.speed=D*i.oldman.speed,this.map.mapMap.add(i.oldman.position.x,i.oldman.position.y,this.man);for(let t of i.sheeps){let i=this.map.get_posiiton(t.position.x,t.position.y);const e=U({context:this.player.context,position:i});e._id=t.id,this.sheeps.push(e),this.map.addEntityToCurrentLevel(e),this.map.mapMap.add(t.position.x,t.position.y,e)}const s={name:"wall"},n={name:"teleport"};for(let t=0;t<i.map.height;t++)for(let e=0;e<i.map.width;e++)"wall"===i.map.map[t][e]&&this.map.mapMap.add(e,t,s),"teleport"===i.map.map[t][e]&&this.map.mapMap.add(e,t,n);const o=i.bonus;if(o){const t=o.name,i=this.map.get_posiiton(o.position.x,o.position.y);"speed"===t&&(this.bonus=Q({context:this.player.context,position:i})),"dog"===t&&(this.bonus=Z({context:this.player.context,position:i})),"oldman"===t&&(this.bonus=it({context:this.player.context,position:i})),this.map.addEntityToCurrentLevel(this.bonus)}break;case"bonus_appear":{const t=i.name,e=this.map.get_posiiton(i.position.x,i.position.y);"speed"===t&&(this.bonus=Q({context:this.player.context,position:e})),"dog"===t&&(this.bonus=Z({context:this.player.context,position:e})),"oldman"===t&&(this.bonus=it({context:this.player.context,position:e})),this.map.addEntityToCurrentLevel(this.bonus);break}case"bonus_disappear":case"take_bonus":this.map.removeEntityFromCurrentLevel(this.bonus);break;case"change_speed":this.players.find((t=>t._id===i.player.id)).speed=D*i.player.speed;break;case"dog_move":{let t=this.map.get_posiiton(i.new_pos.x,i.new_pos.y);const e=B(t.x,t.y,this.dog.position_x,this.dog.position_y);this.map.mapMap.move(i.old_pos.x,i.old_pos.y,i.new_pos.x,i.new_pos.y),this.dog.setTarget({x:t.x,y:t.y}),e.includes("UP")?this.dog.animation_controller.setAnimationByName("walk_back"):this.dog.animation_controller.setAnimationByName("walk");break}case"oldman_move":{let t=this.map.get_posiiton(i.new_pos.x,i.new_pos.y);const e=B(t.x,t.y,this.man.position_x,this.man.position_y);this.map.mapMap.move(i.old_pos.x,i.old_pos.y,i.new_pos.x,i.new_pos.y),this.man.setTarget({x:t.x,y:t.y}),e.includes("UP")?this.man.animation_controller.setAnimationByName("walk_back"):this.man.animation_controller.setAnimationByName("walk");break}case"player_move":{let t=i.id,e=this.players.find((i=>i._id===t));console.log(e),console.log("PLAYER LIST",this.players),console.log(this.map.mapMap.get(i.old_pos.x,i.old_pos.y));let s=this.map.get_posiiton(i.new_pos.x,i.new_pos.y);console.warn(s,i.new_pos,e._position);const n=B(s.x,s.y,e.position_x,e.position_y);console.warn(n),this.map.mapMap.move(i.old_pos.x,i.old_pos.y,i.new_pos.x,i.new_pos.y),e.setTarget({x:s.x,y:s.y}),n.includes("UP")?e.animation_controller.setAnimationByName("walk_back"):e.animation_controller.setAnimationByName("walk");break}case"satisfy_sheep":{let t=this.players.find((t=>t._id===i.player.id)),e=this.sheeps.find((t=>t._id===i.sheep.id));t.is_hidden=!0,e.animation_controller.setAnimationByName("satisfy");let s=B(e.position_x,e.position_y,t.position_x,t.position_y);s.includes("LEFT")?e.direction=g.left:e.direction=g.right,s.includes("UP")&&e.animation_controller.setAnimationByName("satisfy_back");break}case"stop_satisfying":{this.players.find((t=>t._id===i.player.id)).is_hidden=!1;let t=this.sheeps.find((t=>t._id===i.sheep.id));t.animation_controller.setAnimationByName("idle"),t.direction=g.right;break}case"complete_satisfying":this.map.removeEntityFromCurrentLevel(this.sheeps.find((t=>t._id===i.sheep.id))),this.players.find((t=>t._id===i.player.id)).is_hidden=!1;break;case"fight":{let t=i.player.id,e=this.players.find((i=>i._id===t)),s=this.players.indexOf(e),n=this.fights[s];n.is_hidden=!1,n.position_x=e.position_x,n.position_y=e.position_y;break}case"fight_end":{let t=i.player.id,e=this.players.find((i=>i._id===t)),s=this.players.indexOf(e),n=this.fights[s];n.is_hidden=!0,n.position_x=-1e3,n.position_y=-1e3;break}case"loose_game":{let t=i.player.id;alert(`PLAYER ${t} LOOSE`);break}case"win_game":{let t=i.player.id;alert(`PLAYER ${t} WIN`);break}case"player_spawn":{let t=i.player.id,e=this.players.find((i=>i._id===t)),{x:s,y:n}=i.player,o=this.map.get_posiiton(s,n);this.map.mapMap.add(s,n,e),e.position_x=o.x,e.position_y=o.y,e.animation_controller.setAnimationByName("idle"),e.target.active=!1;break}case"player_teleport":{let t=i.player.id,e=this.players.find((i=>i._id===t)),{old_x:s,old_y:n}=i.player;console.log({old_x:s,old_y:n}),console.log(this.map.mapMap.get(s,n));let{x:o,y:a}=i.player,r=this.map.get_posiiton(o,a);this.map.mapMap.move(s,n,o,a),e.position_x=r.x,e.position_y=r.y,e.animation_controller.setAnimationByName("idle"),e.target.active=!1;break}}}};Object.prototype.compare=function(t){return JSON.stringify(this)===JSON.stringify(t)},function(t){let i=0;const e=F.length;F.forEach((s=>{const n=new Image;n.src=s,n.onload=()=>{i++,i===e&&t()}}))}((function(){const t=document.querySelector("canvas");t.width=window.innerWidth,t.height=window.innerHeight,f.sizes.width=f.sizes.height*t.width/t.height;const i=t.height/f.sizes.height,n=t.getContext("2d"),o=new k({context:n,canvas:t,global_scale:i}),r=new WebSocket("ws://localhost:8080"),h=new WebSocket("ws://localhost:8081"),l=O({context:n}),c=function(t){const i=new v({position:{x:0,y:0},sizes:{width:300,height:300},context:null,max_health:100,speed:100,...t});return i.getOffset=function(){return{x:-100,y:-100}},i.addAnimationController(function(){const t=new a({entity:null,frequency:.1});for(const[i,s]of Object.entries(e))t.addAnimation(s);return t}()),i}({context:n}),p=function(t){const i=new v({position:{x:0,y:0},sizes:{width:250,height:250},context:null,max_health:100,speed:50,...t});return i.getOffset=function(){return{x:-25,y:-25}},i.addAnimationController(function(){const t=new a({entity:null,frequency:1/15});for(const[i,e]of Object.entries(s))t.addAnimation(e);return t}()),i}({context:n});l.animation_controller.setAnimationByName("idle"),x.addEntity(l),x.addEntity(c),x.addEntity(p),console.log(x),o.addLevel(x),f.setTarget(l),o.addCamera(f);const _=new et({player:l,map:o,man:c,dog:p}),m=function(t,i){const e=new u;let s=null;const n=e=>{t.global_target=null,i.send(JSON.stringify({event:"move_player",payload:{direction:e}}))};e.addKey("ArrowUp",{down:()=>{n("UP_LEFT")}}),e.addKey("ArrowDown",{down:()=>{n("DOWN_RIGHT")}}),e.addKey("ArrowLeft",{down:()=>{n("DOWN_LEFT")}}),e.addKey("ArrowRight",{down:()=>{n("UP_RIGHT")}}),e.addKey("Space",{down:()=>{const e=t._map.mapMap.position_of(t);if(!e)return;let s=null,n=null;for(let i of A(e.x,e.y)){const o={x:i[0]+e.x,y:i[1]+e.y},a=t._map.mapMap.get(o.x,o.y);if(a&&"SHEEP"===a.type){s=a,n=o;break}}s&&i.send(JSON.stringify({event:"satisfy_sheep",payload:{x:n.x,y:n.y,id:s._id}}))}});const o=e=>{if(console.log(3),!t._map.mapMap.position_of(t))return;console.log(4);let{clientX:s,clientY:n}=e,o=(s/t._map.global_scale-t._map.block_size/4+t._map.camera.position.x)/(t._map.block_size/2),a=(n/t._map.global_scale-t._map.block_size/4+t._map.camera.position.y)/(t._map.block_size/2),r={x:Math.floor(o),y:Math.floor(a),frac_x:o-Math.floor(o),frac_y:a-Math.floor(a)},h={x:0,y:0};if(r.y%2==r.x%2)h.x=Math.floor(r.x/2),h.y=r.y;else{const t=(l=r.frac_x,(c=r.frac_y)<=.5?c<=l&&c<=1-l?1:l<=.5?2:3:c>=l&&c>=1-l?4:l>=.5?3:2);1===t&&(h.x=Math.floor(r.x/2),h.y=r.y-1),2===t&&(h.x=Math.floor((r.x-1)/2),h.y=r.y),3===t&&(h.x=Math.floor((r.x+1)/2),h.y=r.y),4===t&&(h.x=Math.floor(r.x/2),h.y=r.y+1)}var l,c;t.global_target={x:h.x,y:h.y};const p=b(t._map.mapMap.position_of(t),h,t._map.mapMap,t);if(console.log(p),!p)return void console.log("no path;",h);if(0===p.length)return void console.log("zero path;",h);if(1===p.length){console.log("one length path;",h);let e=t._map.mapMap.get(h.x,h.y);if(e&&"SHEEP"===e?.type)return void i.send(JSON.stringify({event:"satisfy_sheep",payload:{x:h.x,y:h.y,id:e._id}}))}console.log(p),console.log(t._map.mapMap.position_of(t)),console.log(h);let _=B(t._map.get_posiiton(p[0].x,p[0].y).x,t._map.get_posiiton(p[0].x,p[0].y).y,t.position_x,t.position_y);console.log(_),i.send(JSON.stringify({event:"move_player",payload:{direction:_}}))};return window.addEventListener("mousedown",(i=>{s=setInterval((()=>{console.log(1),t.target.active||(console.log(2),o(i))}),10)})),window.addEventListener("mouseup",(()=>{clearInterval(s)})),window.addEventListener("touchstart",(i=>{const e=i.touches[0];s=setInterval((()=>{t.target.active||o({clientX:e.clientX,clientY:e.clientY})}),10)})),window.addEventListener("touchend",(()=>{clearInterval(s)})),e}(l,r);r.onopen=function(){console.log("connected"),console.log(r),r.send(JSON.stringify({event:"get_rooms"}))},r.onmessage=function(t){let i=JSON.parse(t.data);console.log(i),"rooms"===i.event&&(i.payload.length,r.send(JSON.stringify({event:"create_game"}))),_.handle(i)},h.onmessage=function(t){console.log(JSON.parse(t.data))},o.start_loop({controls:m})}));